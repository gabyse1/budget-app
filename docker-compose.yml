version: '3.9'

services:
  db:
    image: postgres:14-alpine
    container_name: db
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - shared-data:/var/shared
    networks:
      - production
      - test
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: web
    ports:
      - 3000:3000
    volumes:
      - .:/app
      - shared-data:/var/shared
      - gem-cache:/usr/local/bundle/gems
    networks:
      - production
    stdin_open: true
    tty: true
    env_file: .env
    entrypoint: dev-entrypoint.sh
    command: ["rails", "s", "-p", "3000", "-b", "0.0.0.0"]
    environment:
      - RAILS_ENV=production
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_PORT=${DATABASE_PORT}
    depends_on:
      - db
  
  test:
    image: budget-app-web
    container_name: test
    ports:
      - 3001:3000
    volumes:
      - .:/app
      - shared-data:/var/shared
      - gem-cache:/usr/local/bundle/gems
    networks:
      - test
    stdin_open: true
    tty: true
    env_file: .env.test
    entrypoint: test-entrypoint.sh
    command: ["rails", "-v"]
    environment:
      - RAILS_ENV=test
    depends_on:
      - db
      - web

networks:
  production:
  test:

volumes:
  postgres-data:
  gem-cache:
  shared-data: